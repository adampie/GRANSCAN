#!/bin/bash

function HELP {
   cat << EOF
Usage: granscan [OPTION] [COMMAND]

A simplified way to run various Linux diagnostic tools

Options:
  -h        Print usage
  -a        Run all diagnostic tools

Commands:
  help      Print usage
  check     Check what tools can be run and what missing tools can be installed
  info      Display more information about a section or tool
  cpu       Run CPU diagnostic tools
  memory    Run memory diagnostic tools
  network   Run network diagnostic tools
  storage   Run storage diagnostic tools
  all       Run all diagnostic tools

EOF
  exit 0;
}

function INFO() {
  echo "ALL INFO"
}

function CPUINFO() {
  echo "CPU INFO"
}
function MEMORYINFO() {
  echo "MEMORY INFO"
}
function NETWORKINFO() {
  echo "NETWORK INFO"
}
function STORAGEINFO() {
  echo "STORAGE INFO"
}

function CPU() {
  echo "CPU"
}
function MEMORY() {
  echo "MEMORY"
}
function NETWORK() {
  echo "NETWORK"
}
function STORAGE() {
  echo "STORAGE"
}
function ALL() {
  CPU;
  MEMORY;
  NETWORK;
  STORAGE;
}

while getopts ":hcmnsa" opt; do
  case $opt in
    h)
      if [[ $# == "1" ]]; then
        HELP;
      elif [[ $2 == "cpu" ]]; then
        CPUINFO
      elif [[ $2 == "memory" ]]; then
        MEMORYINFO
      elif [[ $2 == "network" ]]; then
        NETWORKINFO
      elif [[ $2 == "storage" ]]; then
        STORAGE
      fi
      ;;
    a)
      ALL;
      ;;
    \?)
      echo "Invalid option: -$OPTARG"
      echo "Check usage with: granscan -h" >&2
      ;;
  esac
done

if [[ $# == "0" ]]; then
  HELP;
elif [[ $1 == "help" ]]; then
  HELP;
elif [[ $1 == "cpu" ]]; then
  CPU;
elif [[ $1 == "memory" ]]; then
  MEMORY;
elif [[ $1 == "network" ]]; then
  NETWORK;
elif [[ $1 == "storage" ]]; then
  STORAGE;
elif [[ $1 == "all" ]]; then
  ALL;
elif [[ $1 == "info" ]]; then
  INFO;
fi
