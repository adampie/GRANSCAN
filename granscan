#!/bin/bash

function HELP {
   cat << EOF
Usage: granscan [OPTION] [COMMAND]

A simplified way to run various Linux diagnostic tools

Options:
  -h        Print usage
  -a        Run all diagnostic tools

Commands:
  help      Print usage
  check     Check what tools can be run and what missing tools can be installed
  cpu       Run CPU diagnostic tools
  memory    Run memory diagnostic tools
  network   Run network diagnostic tools
  storage   Run storage diagnostic tools
  all       Run cpu, memory, network and storage diagnostic tools
  info      Get various information about the current system

EOF
  exit 0;
}

function CPUHELP() {
  echo "CPU HELP"
}
function MEMORYHELP() {
  echo "MEMORY HELP"
}
function NETWORKHELP() {
  echo "NETWORK HELP"
}
function STORAGEHELP() {
  echo "STORAGE HELP"
}
function INFOHELP() {
  echo "INFO HELP"
}

function CPU() {
  echo "#######################################################################"
  echo "#                              CPU                                    #"
  echo "#######################################################################"
  echo ""
}
function MEMORY() {
  echo "#######################################################################"
  echo "#                             MEMORY                                  #"
  echo "#######################################################################"
  echo ""
}
function NETWORK() {
  echo "#######################################################################"
  echo "#                             NETWORK                                 #"
  echo "#######################################################################"
  echo ""
  if [[ -x "$(command -v netstat)" ]]; then
    echo "############################# netstat #################################"
    netstat;
    echo "";
  fi
  if [[ -x "$(command -v ss)" ]]; then
    echo "############################### ss ####################################"
    ss;
    echo "";
  fi
}
function STORAGE() {
  echo "#######################################################################"
  echo "#                             STORAGE                                 #"
  echo "#######################################################################"
  echo ""
  if [[ -x "$(command -v df)" ]]; then
    echo "############################### df ####################################"
    df -h;
    echo "";
  fi
  if [[ -x "$(command -v lsblk)" ]]; then
    echo "############################## lsblk ###################################"
    lsblk;
    echo "";
  fi
}
function ALL() {
  CPU;
  MEMORY;
  NETWORK;
  STORAGE;
}
function INFO() {
  echo "#######################################################################"
  echo "#                              INFO                                   #"
  echo "#######################################################################"
  echo ""
  if [[ -x "$(command -v lscpu)" ]]; then
    echo "############################## lscpu ##################################"
    lscpu;
    echo "";
  fi
  if [[ -x "$(command -v lshw)" ]]; then
    echo "############################## lshw ###################################"
    lshw -short;
    echo "";
  fi
  if [[ -x "$(command -v lsscsi)" ]]; then
    echo "############################# lsscsi ##################################"
    lsscsi;
    echo "";
  fi
  if [[ -x "$(command -v lsusb)" ]]; then
    echo "############################# lsusb ###################################"
    lsusb;
    echo "";
  fi
}

while getopts ":ha" opt; do
  case $opt in
    h)
      if [[ $# == "1" ]]; then
        HELP;
      elif [[ $2 == "cpu" ]]; then
        CPUHELP
      elif [[ $2 == "memory" ]]; then
        MEMORYHELP
      elif [[ $2 == "network" ]]; then
        NETWORKHELP
      elif [[ $2 == "storage" ]]; then
        STORAGEHELP
      fi
    elif [[ $2 == "info" ]]; then
        INFOHELP
      fi
      ;;
    a)
      ALL;
      ;;
    \?)
      echo "Invalid option: -$OPTARG"
      echo "Check usage with: granscan -h" >&2
      ;;
  esac
done

if [[ $# == "0" ]]; then
  HELP;
elif [[ $1 == "help" ]]; then
  HELP;
elif [[ $1 == "cpu" ]]; then
  CPU;
elif [[ $1 == "memory" ]]; then
  MEMORY;
elif [[ $1 == "network" ]]; then
  NETWORK;
elif [[ $1 == "storage" ]]; then
  STORAGE;
elif [[ $1 == "all" ]]; then
  ALL;
elif [[ $1 == "info" ]]; then
  INFO;
elif [[ $1 == "stats" ]]; then
  STATS;
fi
